<project_instructions version="1.3">
  <context_index desc="Use first if signed.">
    <filename>context_index.txt</filename>
    <required>preferred</required>
    <priority>100</priority>
    <signature>
      <marker>// type: autogenerated</marker>
      <marker>// signature: concatenator</marker>
    </signature>
    <format>jsonl</format>
    <expectations>
      <must_contain key="concatenated_file"/>
      <must_contain key="output"/>
      <may_contain key="generated_at"/>
    </expectations>
  </context_index>

  <spec desc="Load immediately after validating index.">
    <filename>spec.txt</filename>
    <required>preferred</required>
    <priority>95</priority>
    <resolution_order>
      <step>Use path in signed index if endswith spec.txt|spec.md</step>
      <step>Else search: spec.txt -> spec.md -> README.md</step>
    </resolution_order>
    <conflicts>
      <rule>Spec governs human-facing priorities; index governs merge order.</rule>
    </conflicts>
  </spec>

  <chunking_strategy desc="Load only relevant parts.">
    <policy>header_guided</policy>
    <chunk_bytes>131072</chunk_bytes>
    <max_chunks>12</max_chunks>
    <selection>
      <rule>Score headers by overlap with user request; include top-K.</rule>
      <rule>Always include spec sections: objectives|to_do|constraints.</rule>
    </selection>
  </chunking_strategy>

  <runtime_limits desc="Token budgets &amp; escalation.">
    <token_budget>
      <soft_input_tokens>80000</soft_input_tokens>
      <hard_input_tokens>120000</hard_input_tokens>
      <soft_output_tokens>2000</soft_output_tokens>
      <hard_output_tokens>4000</hard_output_tokens>
      <exceed_policy>
        <on_soft_exceed>negotiate_or_paginate</on_soft_exceed>
        <on_hard_exceed>block_and_request_approval</on_hard_exceed>
      </exceed_policy>
    </token_budget>
  </runtime_limits>

  <long_answer_policy>
    <defaults><mode>paginate</mode><max_pages>10</max_pages><page_size_tokens>1500</page_size_tokens></defaults>
    <approval_required>
      <tool name="request_budget_approval" blocking="true">
        <inputs>
          <field name="reason"/><field name="projected_input_tokens"/><field name="projected_output_tokens"/>
          <field name="alternatives"/><field name="estimated_cost"/>
        </inputs>
        <outputs><field name="decision" enum="approved|rejected|use_alternative"/></outputs>
      </tool>
    </approval_required>
  </long_answer_policy>

  <provenance desc="Emit lines per used chunk.">
    <collect_when>
      <tuple_schema>
        <field name="chunk_id" required="yes" desc="Hash of {context_index_entry, embedded_path, line_range}"/>
        <field name="context_index_entry" required="yes"/>
        <field name="embedded_path" required="yes"/>
        <field name="header_title" required="optional"/>
        <field name="line_range" required="optional"/>
      </tuple_schema>
    </collect_when>
    <emit_as>
      <line>chunk_id: {chunk_id}</line>
      <line>context_index: {context_index_entry}</line>
      <line>filepath: {embedded_path}</line>
      <line optional="yes">section: {header_title}</line>
      <line optional="yes">lines: {line_range}</line>
    </emit_as>
  </provenance>

  <operating_principles>
    <approval_matrix>
      <change_level name="talk_requirements" risk="none">
        <allowed_actions>unrestricted</allowed_actions><human_approval>not_required</human_approval>
      </change_level>
      <change_level name="read_only_analysis" risk="low">
        <allowed_actions>read_only</allowed_actions><human_approval>not_required</human_approval>
      </change_level>
      <change_level name="low_risk_write" risk="low">
        <allowed_actions>open_PR</allowed_actions>
        <gates><gate>1_human_ack</gate><gate>auto_checks_pass</gate></gates>
      </change_level>
      <change_level name="bugfix_scoped" risk="moderate">
        <allowed_actions>open_PR</allowed_actions>
        <gates><gate>reviewers>=1</gate><gate>ci_green</gate></gates>
      </change_level>
      <change_level name="breaking_or_rewrite" risk="critical">
        <allowed_actions>draft_RFC|security_review|open_PR_locked</allowed_actions>
        <gates><gate>tech_lead_signoff</gate><gate>product_owner_signoff</gate><gate>manual_release_authorization</gate></gates>
      </change_level>
      <change_level name="secrets_and_access" risk="critical">
        <allowed_actions>propose_only</allowed_actions>
        <gates><gate>never_execute_autonomously</gate><gate>security_officer_approval</gate></gates>
      </change_level>
    </approval_matrix>

    <approval_execution>
      <tool name="request_human_approval" blocking="true">
        <inputs>
          <field>change_level</field><field>diff_or_plan_url</field><field>risk_summary</field>
          <field>rollback_plan</field><field>blast_radius</field><field>cost_estimate</field>
        </inputs>
        <outputs><field name="decision" enum="approved|rejected|revise|timeboxed_experiment"/></outputs>
        <pause_resume>on_call=pause_run; on_decision=resume_or_abort</pause_resume>
      </tool>
    </approval_execution>

    <preconditions>
      <check>INDEX_SIGNED or explicit human override</check>
      <check>spec loaded first</check>
      <check>tests_exist OR waiver for low_risk_write</check>
      <check>ci_green for >= bugfix_scoped</check>
      <check>required approvals obtained</check>
    </preconditions>

    <audit_trail>
      <include>files_used_in_order</include>
      <include>source_tracebacks</include>
      <include>decision_and_approvers</include>
      <include>budget_projection_and_decision</include>
    </audit_trail>
  </operating_principles>

  <enforcement>
    <check_signed_index>
      <inspect_first_lines>40</inspect_first_lines>
      <must_contain>// type: autogenerated</must_contain>
      <must_contain>// signature: concatenator</must_contain>
      <result name="INDEX_SIGNED">true|false</result>
    </check_signed_index>
    <load_sequence><step>Index (if signed) -> Spec -> Context blocks -> Legacy</step></load_sequence>
  </enforcement>
</project_instructions>
